<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans
        	http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util.xsd
        ">
        
	<context:component-scan base-package="_01.model _01.service _01.dao" />
        
	<!--
		Above there are type of elements in xml used by used spring!
		<bean id="" class="">
			<property name="" OR ref="" >
				<list>
					<value></value>
					<ref bean=""/>
					<bean id="" class="">
						<property name="" value="" />
			<property name="">
				<set>
					<value></value>
			<property name="">
				<map>
					<entry key="">
						<value></value>
					<entry key="">
						<bean id="" class="">
							<property name="" value="" />
			<property name="">
				<props>
					<prop key=""></prop>
		<util:set set-class="java.util.TreeSet"/>
		<util:properties location="classpath:/fileName.properties"/>
		<util:properties location="file:./src/main/resources/fileName.properties"/>
		<bean depends-on="beanName" />
		<bean lazy-init="default" />
	-->
	
	<!-- setter injection -->
	<bean id="company" class="_01.model.Company">
		<property name="id" value="10" />
		<property name="name" value="Google" />
		<property name="address" value="x street y location US" />
	</bean>
	
	<!-- constructor injection -->
	<bean id="company2" class="_01.model.Company">
		<constructor-arg type="int">
			<value>11</value>
		</constructor-arg>
		<constructor-arg value="Arçelik"/>
		<constructor-arg>
			<value>y caddesi z sokak İstanbul</value>
		</constructor-arg>
	</bean>
	
	<bean id="job" class="_01.model.Job">
		<property name="id" value="101" />
		<property name="company" ref="company2" />
		<property name="location" value="New York" />
		<property name="position" value="Software Developer" />
	</bean>

	<util:list id="employeeList">
		<value>Employye-11</value>
		<value>Employye-12</value>
	</util:list>
	
	<bean id="ConfigWithSpel" class="_01.config.ConfigWithSpel"/>
	
	<!-- SPEL -->
	<bean id="company3" class="_01.model.Company">
		<property name="id" value="#{ConfigWithSpel.id}"/>
		<property name="name" value="#{ConfigWithSpel.companyName}"/>
		<property name="address" value="#{ConfigWithSpel.address}"/>
	</bean>
	
	<!--
		BEAN ALIASING
		<bean id="name1" name="name2 name3,name4;name5" class="xxx.model.Employee"/>
		
		<alias name="name1" alias="name6"/>
		
		<bean id="employeeSingleton" class="xxx.model.Employee"/> singleton as default
		
		<bean id="employeePrototype" class="xxx.model.Employee" scope="prototype"/>
	-->
	
	<!--
		1)
		<bean  autowire="byName"/>
		<bean id="xxxByName"/>
		The variable name "Class.xxxByName" and and the bean name "xxxByName" should be same!
		
		2)
		<bean autowire="byType"/>
		<bean id="Xxx.class">
		<bean id="Xxx.class" autowire-candidate="false">
		
		3)
		<bean autowire="constructor"/>
		
		
		@Autowired
		@Qualifier(value="")
		
		to use the @Autowired
		the code below should be used in xml file
		<context:annotation-config/>
		
		For stereo types @Component @Repository @Service @Controller
		<context:component-scan base-package="" />
	-->

</beans>